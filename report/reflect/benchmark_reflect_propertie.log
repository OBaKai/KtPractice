# JMH version: 1.21
# VM version: JDK 1.8.0_51, Java HotSpot(TM) 64-Bit Server VM, 25.51-b03
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.hi.dhl.demo.ReflectBenchmark.callPropertie

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.453 ms/op
# Warmup Iteration   2: 0.236 ms/op
# Warmup Iteration   3: 0.234 ms/op
# Warmup Iteration   4: 0.236 ms/op
# Warmup Iteration   5: 0.232 ms/op
Iteration   1: 0.240 ms/op
Iteration   2: 0.231 ms/op
Iteration   3: 0.238 ms/op
Iteration   4: 0.230 ms/op
Iteration   5: 0.268 ms/op


Result "com.hi.dhl.demo.ReflectBenchmark.callPropertie":
  0.241 ±(99.9%) 0.060 ms/op [Average]
  (min, avg, max) = (0.230, 0.241, 0.268), stdev = 0.016
  CI (99.9%): [0.181, 0.301] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_51, Java HotSpot(TM) 64-Bit Server VM, 25.51-b03
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.hi.dhl.demo.ReflectBenchmark.callReflectPropertie

# Run progress: 25.00% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 19.676 ms/op
# Warmup Iteration   2: 13.517 ms/op
# Warmup Iteration   3: 13.516 ms/op
# Warmup Iteration   4: 12.080 ms/op
# Warmup Iteration   5: 13.325 ms/op
Iteration   1: 13.576 ms/op
Iteration   2: 12.291 ms/op
Iteration   3: 11.962 ms/op
Iteration   4: 12.407 ms/op
Iteration   5: 11.926 ms/op


Result "com.hi.dhl.demo.ReflectBenchmark.callReflectPropertie":
  12.432 ±(99.9%) 2.588 ms/op [Average]
  (min, avg, max) = (11.926, 12.432, 13.576), stdev = 0.672
  CI (99.9%): [9.844, 15.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_51, Java HotSpot(TM) 64-Bit Server VM, 25.51-b03
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.hi.dhl.demo.ReflectBenchmark.callReflectPropertieAccessibleFalse

# Run progress: 50.00% complete, ETA 00:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 2.739 ms/op
# Warmup Iteration   2: 1.469 ms/op
# Warmup Iteration   3: 1.367 ms/op
# Warmup Iteration   4: 1.460 ms/op
# Warmup Iteration   5: 1.352 ms/op
Iteration   1: 1.364 ms/op
Iteration   2: 1.378 ms/op
Iteration   3: 1.356 ms/op
Iteration   4: 1.352 ms/op
Iteration   5: 1.357 ms/op


Result "com.hi.dhl.demo.ReflectBenchmark.callReflectPropertieAccessibleFalse":
  1.362 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (1.352, 1.362, 1.378), stdev = 0.010
  CI (99.9%): [1.322, 1.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_51, Java HotSpot(TM) 64-Bit Server VM, 25.51-b03
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.hi.dhl.demo.ReflectBenchmark.callReflectPropertieAccessibleTrue

# Run progress: 75.00% complete, ETA 00:00:30
# Fork: 1 of 1
# Warmup Iteration   1: 2.212 ms/op
# Warmup Iteration   2: 1.301 ms/op
# Warmup Iteration   3: 1.262 ms/op
# Warmup Iteration   4: 1.298 ms/op
# Warmup Iteration   5: 1.335 ms/op
Iteration   1: 1.203 ms/op
Iteration   2: 1.202 ms/op
Iteration   3: 1.196 ms/op
Iteration   4: 1.207 ms/op
Iteration   5: 1.201 ms/op


Result "com.hi.dhl.demo.ReflectBenchmark.callReflectPropertieAccessibleTrue":
  1.202 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (1.196, 1.202, 1.207), stdev = 0.004
  CI (99.9%): [1.187, 1.217] (assumes normal distribution)


# Run complete. Total time: 00:02:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              Mode  Cnt   Score   Error  Units
ReflectBenchmark.callPropertie                        avgt    5   0.241 ± 0.060  ms/op
ReflectBenchmark.callReflectPropertie                 avgt    5  12.432 ± 2.588  ms/op
ReflectBenchmark.callReflectPropertieAccessibleFalse  avgt    5   1.362 ± 0.039  ms/op
ReflectBenchmark.callReflectPropertieAccessibleTrue   avgt    5   1.202 ± 0.015  ms/op

Benchmark result is saved to benchmark_reflect1651647642556.json
